/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
        WHMRL: WHMRL {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&shiva_ht LEFT_ALT S>;
            label = "WHMRL";
        };

        WHRMR: WHRMR {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none>;
            label = "WHRMR";
        };
    };

    behaviors {
        shiva_ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "hold_tap";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        windows_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            display-name = "WIN";
            bindings = <
&kp TILDE       &kp N1  &kp N2                &kp N3                &kp N4                    &kp N5                                  &kp N6     &kp N7                     &kp N8                 &kp N9                 &kp N0         &kp BACKSPACE
&kp TAB         &kp Q   &kp W                 &kp E                 &kp R                     &kp T                                   &kp Y      &kp U                      &kp I                  &kp O                  &kp P          &kp MINUS
&kp ESC         &kp A   &shiva_ht LEFT_ALT S  &shiva_ht LEFT_WIN D  &shiva_ht LEFT_CONTROL F  &kp G                                   &kp H      &shiva_ht RIGHT_CONTROL J  &shiva_ht RIGHT_GUI K  &shiva_ht RIGHT_ALT L  &kp SEMICOLON  &kp ENTER
&kp LEFT_SHIFT  &kp Z   &kp X                 &kp C                 &kp V                     &kp B      &kp LEFT_ALT      &kp ENTER  &kp N      &kp M                      &kp COMMA              &kp DOT                &kp SLASH      &kp RIGHT_SHIFT
                                              &trans                &trans                    &lt 1 TAB  &kp LEFT_SHIFT    &kp SPACE  &lt 2 TAB  &trans                     &trans
            >;
        };

        left_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            display-name = "LEF";
            bindings = <
&trans       &kp F1       &kp F2             &kp F3           &kp F4                 &kp F5                       &kp F6     &kp F7    &kp F8           &kp F9            &kp F10            &kp F11
&kp LC(TAB)  &kp AT_SIGN  &trans             &trans           &trans                 &trans                       &trans     &trans    &trans           &kp LEFT_BRACE    &kp RIGHT_BRACE    &trans
&kp GRAVE    &kp EXCL     &kp LEFT_BRACKET   &kp LEFT_BRACE   &kp LEFT_PARENTHESIS   &trans                       &kp CARET  &kp AMPS  &kp KP_MULTIPLY  &kp LPAR          &kp RPAR           &trans
&trans       &trans       &kp RIGHT_BRACKET  &kp RIGHT_BRACE  &kp RIGHT_PARENTHESIS  &trans  &trans    &trans     &trans     &trans    &trans           &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp PIPE
                                             &trans           &trans                 &trans  &trans    &kp SPACE  &trans     &trans    &trans
            >;
        };

        right_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            display-name = "RIG";
            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                                &trans          &trans          &trans  &kp C_PREV       &kp C_NEXT     &kp C_PLAY_PAUSE
&trans  &trans        &trans        &trans        &trans        &trans                                      &trans          &trans          &trans  &kp C_BRI_UP     &kp C_BRI_DEC  &kp C_VOLUME_UP
&trans  &trans        &trans        &trans        &trans        &trans                                      &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP  &kp RIGHT_ARROW  &kp BACKSPACE  &kp C_VOLUME_DOWN
&trans  &trans        &trans        &trans        &trans        &trans        &bt BT_CLR    &bt BT_CLR_ALL  &trans          &trans          &trans  &trans           &trans         &trans
                                    &trans        &trans        &trans        &trans        &trans          &trans          &trans          &trans
            >;
        };

        tri_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
